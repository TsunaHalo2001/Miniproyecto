/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package miniproyecto.Menu;

import javax.swing.DefaultListModel;

import miniproyecto.Soldados.Soldado;
import miniproyecto.app.Logica;

/**
 *
 * @author user
 */
public class Realizar_Accion extends javax.swing.JFrame {

    /**
     * Creates new form Realizar_Accion
     */
    public Realizar_Accion() {
        initComponents();
        leerLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Saludar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Patrullar");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(51, 51, 51));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Volver");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(51, 51, 51));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Rega√±ar");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );

        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        jList1.setBackground(new java.awt.Color(51, 51, 51));
        jList1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jList2.setBackground(new java.awt.Color(51, 51, 51));
        jList2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jList2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Subordinado:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Superior:");

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Dar Orden");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Dar Orden", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        Menu men = new Menu();
        men.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        if (jList1.getSelectedIndex() == -1 || jList2.getSelectedIndex() == -1) {
            jLabel1.setText("Seleccione un soldado");
            return;
        }

        if (jList1.getSelectedIndex() == jList2.getSelectedIndex()) {
            jLabel1.setText("No puede dar orden a si mismo");
            return;
        }

        for (int i = 0; i < Logica.listaSoldadoRaso.size(); i++) {
            if (Logica.listaSoldadoRaso.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado no puede dar orden a otro soldado raso");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaTeniente.get(j).darOrden(Logica.listaSoldadoRaso.get(i)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(j).darOrden(Logica.listaSoldadoRaso.get(i)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(j).darOrden(Logica.listaSoldadoRaso.get(i)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaTeniente.size(); i++) {
            if (Logica.listaTeniente.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado Raso no puede dar orden a un teniente");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El teniente no puede dar orden a otro teniente");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(j).darOrden(Logica.listaTeniente.get(i)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(j).darOrden(Logica.listaTeniente.get(i)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaCapitan.size() ; i++) {
            if (Logica.listaCapitan.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado Raso no puede dar orden a un capitan");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El teniente no puede dar orden a un capitan");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El coronel no puede dar orden a un capitan");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El capitan no puede dar orden a otro capitan");
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaCoronel.size(); i++) {
            if (Logica.listaCoronel.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado Raso no puede dar orden a un coronel");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El teniente no puede dar orden a un coronel");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El coronel no puede dar orden a otro coronel");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El capitan no puede dar orden a un coronel");
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton7MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        if (jList1.getSelectedIndex() == -1 || jList2.getSelectedIndex() == -1) {
            jLabel1.setText("Seleccione un soldado");
            return;
        }

        if (jList1.getSelectedIndex() == jList2.getSelectedIndex()) {
            jLabel1.setText("No puede dar orden a si mismo");
            return;
        }

        for (int i = 0; i < Logica.listaSoldadoRaso.size(); i++) {
            if (Logica.listaSoldadoRaso.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado no puede rega√±ar a otro soldado raso");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaTeniente.get(j).reganiado(Logica.listaSoldadoRaso.get(i)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(j).reganiado(Logica.listaSoldadoRaso.get(i)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(j).reganiado(Logica.listaSoldadoRaso.get(i)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaTeniente.size(); i++) {
            if (Logica.listaTeniente.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado Raso no puede rega√±ar a un teniente");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El teniente no puede rega√±ar a otro teniente");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(j).reganiado(Logica.listaTeniente.get(i)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(j).reganiado(Logica.listaTeniente.get(i)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaCapitan.size() ; i++) {
            if (Logica.listaCapitan.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado Raso no puede rega√±ar a un capitan");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El teniente no puede rega√±ar a un capitan");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El coronel no puede rega√±ar a un capitan");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El capitan no puede rega√±ar a otro capitan");
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaCoronel.size(); i++) {
            if (Logica.listaCoronel.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El soldado Raso no puede rega√±ar a un coronel");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El teniente no puede rega√±ar a un coronel");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El coronel no puede rega√±ar a otro coronel");
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText("El capitan no puede rega√±ar a un coronel");
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        if (jList1.getSelectedIndex() == -1 || jList2.getSelectedIndex() == -1) {
            jLabel1.setText("Seleccione un soldado");
            return;
        }

        if (jList1.getSelectedIndex() == jList2.getSelectedIndex()) {
            jLabel1.setText("No puede dar orden a si mismo");
            return;
        }

        for (int i = 0; i < Logica.listaSoldadoRaso.size(); i++) {
            if (Logica.listaSoldadoRaso.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaSoldadoRaso.get(i).saludar(Logica.listaSoldadoRaso.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaSoldadoRaso.get(i).saludar(Logica.listaTeniente.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaSoldadoRaso.get(i).saludar(Logica.listaCoronel.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaSoldadoRaso.get(i).saludar(Logica.listaCapitan.get(j)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaTeniente.size(); i++) {
            if (Logica.listaTeniente.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaTeniente.get(i).saludar(Logica.listaSoldadoRaso.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaTeniente.get(i).saludar(Logica.listaTeniente.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaTeniente.get(i).saludar(Logica.listaCoronel.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaTeniente.get(i).saludar(Logica.listaCapitan.get(j)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaCapitan.size() ; i++) {
            if (Logica.listaCapitan.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(i).saludar(Logica.listaSoldadoRaso.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(i).saludar(Logica.listaTeniente.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(i).saludar(Logica.listaCoronel.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCapitan.get(i).saludar(Logica.listaCapitan.get(j)));
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < Logica.listaCoronel.size(); i++) {
            if (Logica.listaCoronel.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) {
                    if (Logica.listaSoldadoRaso.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(i).saludar(Logica.listaSoldadoRaso.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaTeniente.size(); j++) {
                    if (Logica.listaTeniente.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(i).saludar(Logica.listaTeniente.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCoronel.size(); j++) {
                    if (Logica.listaCoronel.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(i).saludar(Logica.listaCoronel.get(j)));
                        return;
                    }
                }

                for (int j = 0; j < Logica.listaCapitan.size(); j++) {
                    if (Logica.listaCapitan.get(j).getContSoldado() == jList2.getSelectedIndex() + 1) {
                        jLabel1.setText(Logica.listaCoronel.get(i).saludar(Logica.listaCapitan.get(j)));
                        return;
                    }
                }
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        if (jList1.getSelectedIndex() == -1 && jList2.getSelectedIndex() == -1) {
            jLabel1.setText("Seleccione un soldado");
            return;
        }

        for (int i = 0; i < Logica.listaSoldadoRaso.size(); i++) {
            if (Logica.listaSoldadoRaso.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                jLabel1.setText(Logica.listaSoldadoRaso.get(i).patrullar());
                return;
            }
        }

        for (int i = 0; i < Logica.listaTeniente.size(); i++) {
            if (Logica.listaTeniente.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                jLabel1.setText(Logica.listaTeniente.get(i).patrullar());
                return;
            }
        }

        for (int i = 0; i < Logica.listaCoronel.size(); i++) {
            if (Logica.listaCoronel.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                jLabel1.setText(Logica.listaCoronel.get(i).patrullar());
                return;
            }
        }

        for (int i = 0; i < Logica.listaCapitan.size(); i++) {
            if (Logica.listaCapitan.get(i).getContSoldado() == jList1.getSelectedIndex() + 1) {
                jLabel1.setText(Logica.listaCapitan.get(i).patrullar());
                return;
            }
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private DefaultListModel limpiarLista1() {
        DefaultListModel modelo = new DefaultListModel();

        jList1.setModel(modelo);

        return modelo;
    }

    private DefaultListModel limpiarLista2() {
        DefaultListModel modelo = new DefaultListModel();

        jList2.setModel(modelo);

        return modelo;
    }

    private DefaultListModel agregarValor1(Soldado soldado) {
        DefaultListModel modelo = (DefaultListModel) jList1.getModel();

        modelo.addElement(soldado.getNombre());

        return modelo;
    }
    
    private DefaultListModel agregarValor2(Soldado soldado) {
        DefaultListModel modelo = (DefaultListModel) jList2.getModel();

        modelo.addElement(soldado.getNombre());

        return modelo;
    }
    
    private void leerLista() {
        limpiarLista1();
        limpiarLista2();

        if (Soldado.getContadorSoldados() > 0) {
            int a = Logica.listaSoldadoRaso.size() + Logica.listaTeniente.size() + Logica.listaCoronel.size() + Logica.listaCapitan.size();
            
            for (int i = 0; i < a; i++) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) if (Logica.listaSoldadoRaso.get(j).getContSoldado() == i + 1) agregarValor1(Logica.listaSoldadoRaso.get(j));
                for (int j = 0; j < Logica.listaTeniente.size(); j++) if (Logica.listaTeniente.get(j).getContSoldado() == i + 1) agregarValor1(Logica.listaTeniente.get(j));
                for (int j = 0; j < Logica.listaCoronel.size(); j++) if (Logica.listaCoronel.get(j).getContSoldado() == i + 1) agregarValor1(Logica.listaCoronel.get(j));
                for (int j = 0; j < Logica.listaCapitan.size(); j++) if (Logica.listaCapitan.get(j).getContSoldado() == i + 1) agregarValor1(Logica.listaCapitan.get(j));
            }

            if (Soldado.getContadorSoldados() - a > 0) {
                int aux = Soldado.getContadorSoldados() - a;
                for (int i = 0; i < aux; i++) {
                    for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) if (Logica.listaSoldadoRaso.get(j).getContSoldado() == a + i + 1) agregarValor1(Logica.listaSoldadoRaso.get(j));
                    for (int j = 0; j < Logica.listaTeniente.size(); j++) if (Logica.listaTeniente.get(j).getContSoldado() == a + i + 1) agregarValor1(Logica.listaTeniente.get(j));
                    for (int j = 0; j < Logica.listaCoronel.size(); j++) if (Logica.listaCoronel.get(j).getContSoldado() == a + i + 1) agregarValor1(Logica.listaCoronel.get(j));
                    for (int j = 0; j < Logica.listaCapitan.size(); j++) if (Logica.listaCapitan.get(j).getContSoldado() == a + i + 1) agregarValor1(Logica.listaCapitan.get(j));
                }
            }
        }

        if (Soldado.getContadorSoldados() > 0) {
            int a = Logica.listaSoldadoRaso.size() + Logica.listaTeniente.size() + Logica.listaCoronel.size() + Logica.listaCapitan.size();
            
            for (int i = 0; i < a; i++) {
                for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) if (Logica.listaSoldadoRaso.get(j).getContSoldado() == i + 1) agregarValor2(Logica.listaSoldadoRaso.get(j));
                for (int j = 0; j < Logica.listaTeniente.size(); j++) if (Logica.listaTeniente.get(j).getContSoldado() == i + 1) agregarValor2(Logica.listaTeniente.get(j));
                for (int j = 0; j < Logica.listaCoronel.size(); j++) if (Logica.listaCoronel.get(j).getContSoldado() == i + 1) agregarValor2(Logica.listaCoronel.get(j));
                for (int j = 0; j < Logica.listaCapitan.size(); j++) if (Logica.listaCapitan.get(j).getContSoldado() == i + 1) agregarValor2(Logica.listaCapitan.get(j));
            }

            if (Soldado.getContadorSoldados() - a > 0) {
                int aux = Soldado.getContadorSoldados() - a;
                for (int i = 0; i < aux; i++) {
                    for (int j = 0; j < Logica.listaSoldadoRaso.size(); j++) if (Logica.listaSoldadoRaso.get(j).getContSoldado() == a + i + 1) agregarValor2(Logica.listaSoldadoRaso.get(j));
                    for (int j = 0; j < Logica.listaTeniente.size(); j++) if (Logica.listaTeniente.get(j).getContSoldado() == a + i + 1) agregarValor2(Logica.listaTeniente.get(j));
                    for (int j = 0; j < Logica.listaCoronel.size(); j++) if (Logica.listaCoronel.get(j).getContSoldado() == a + i + 1) agregarValor2(Logica.listaCoronel.get(j));
                    for (int j = 0; j < Logica.listaCapitan.size(); j++) if (Logica.listaCapitan.get(j).getContSoldado() == a + i + 1) agregarValor2(Logica.listaCapitan.get(j));
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Realizar_Accion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Realizar_Accion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Realizar_Accion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Realizar_Accion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Realizar_Accion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
